<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="5" ignored="0" total="6" passed="0">
  <reporter-output>
    <line>
      <![CDATA[This is the test script]]>
    </line>
    <line>
      <![CDATA[test has been started]]>
    </line>
    <line>
      <![CDATA[Test Script got failed and screenshot is taken]]>
    </line>
    <line>
      <![CDATA[test has been started]]>
    </line>
    <line>
      <![CDATA[Test Script got failed and screenshot is taken]]>
    </line>
    <line>
      <![CDATA[test has been started]]>
    </line>
    <line>
      <![CDATA[Test Script got failed and screenshot is taken]]>
    </line>
    <line>
      <![CDATA[test has been started]]>
    </line>
    <line>
      <![CDATA[Test Script got failed and screenshot is taken]]>
    </line>
    <line>
      <![CDATA[test has been started]]>
    </line>
    <line>
      <![CDATA[Test Script got failed and screenshot is taken]]>
    </line>
    <line>
      <![CDATA[test has been started]]>
    </line>
    <line>
      <![CDATA[verifyTitle3 test is skipped]]>
    </line>
    <line>
      <![CDATA[Reports are generated]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="107549" started-at="2021-07-02T09:23:33 IST" finished-at="2021-07-02T09:25:20 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="107549" started-at="2021-07-02T09:23:33 IST" finished-at="2021-07-02T09:25:20 IST">
      <class name="TakeScreenshotDymically.TestScreenShots">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="setUp" is-config="true" duration-ms="5028" started-at="2021-07-02T09:23:33 IST" finished-at="2021-07-02T09:23:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="invalidTest()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="invalidTest" duration-ms="49738" started-at="2021-07-02T09:23:38 IST" finished-at="2021-07-02T09:24:27 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='errormsg' and contains(.,'User')]"}
  (Session info: chrome=91.0.4472.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-A3RR3TC', ip: '192.168.220.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.114, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\Amrutesh\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:56382}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8abf59f8d1c7a3f051cd641ce232c9f2
*** Element info: {Using=xpath, value=//span[@class='errormsg' and contains(.,'User')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[@class='errormsg' and contains(.,'User')]"}
  (Session info: chrome=91.0.4472.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'DESKTOP-A3RR3TC', ip: '192.168.220.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_281'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 91.0.4472.114, chrome: {chromedriverVersion: 90.0.4430.24 (4c6d850f087da..., userDataDir: C:\Users\Amrutesh\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:56382}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 8abf59f8d1c7a3f051cd641ce232c9f2
*** Element info: {Using=xpath, value=//span[@class='errormsg' and contains(.,'User')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at TakeScreenshotDymically.TestScreenShots.invalidTest(TestScreenShots.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
            <line>
              <![CDATA[test has been started]]>
            </line>
            <line>
              <![CDATA[Test Script got failed and screenshot is taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="tearDown" is-config="true" duration-ms="680" started-at="2021-07-02T09:24:35 IST" finished-at="2021-07-02T09:24:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="setUp" is-config="true" duration-ms="3688" started-at="2021-07-02T09:24:35 IST" finished-at="2021-07-02T09:24:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyTitle()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="verifyTitle" duration-ms="8" started-at="2021-07-02T09:24:39 IST" finished-at="2021-07-02T09:24:39 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME123 - Login] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME123 - Login] but found [actiTIME - Login]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TakeScreenshotDymically.TestScreenShots.verifyTitle(TestScreenShots.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test has been started]]>
            </line>
            <line>
              <![CDATA[Test Script got failed and screenshot is taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyTitle -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="tearDown" is-config="true" duration-ms="670" started-at="2021-07-02T09:24:46 IST" finished-at="2021-07-02T09:24:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="setUp" is-config="true" duration-ms="4033" started-at="2021-07-02T09:24:47 IST" finished-at="2021-07-02T09:24:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyTitle2()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="verifyTitle2" duration-ms="6" started-at="2021-07-02T09:24:51 IST" finished-at="2021-07-02T09:24:51 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME123 - Login] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME123 - Login] but found [actiTIME - Login]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TakeScreenshotDymically.TestScreenShots.verifyTitle2(TestScreenShots.java:58)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test has been started]]>
            </line>
            <line>
              <![CDATA[Test Script got failed and screenshot is taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyTitle2 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="tearDown" is-config="true" duration-ms="632" started-at="2021-07-02T09:24:58 IST" finished-at="2021-07-02T09:24:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="setUp" is-config="true" duration-ms="2928" started-at="2021-07-02T09:24:59 IST" finished-at="2021-07-02T09:25:02 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyTitle5()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="verifyTitle5" duration-ms="7" started-at="2021-07-02T09:25:02 IST" finished-at="2021-07-02T09:25:02 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME123 - Login] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME123 - Login] but found [actiTIME - Login]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TakeScreenshotDymically.TestScreenShots.verifyTitle5(TestScreenShots.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test has been started]]>
            </line>
            <line>
              <![CDATA[Test Script got failed and screenshot is taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyTitle5 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="tearDown" is-config="true" duration-ms="974" started-at="2021-07-02T09:25:09 IST" finished-at="2021-07-02T09:25:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="setUp" is-config="true" duration-ms="2618" started-at="2021-07-02T09:25:10 IST" finished-at="2021-07-02T09:25:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="verifyTitle4()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="verifyTitle4" duration-ms="7" started-at="2021-07-02T09:25:12 IST" finished-at="2021-07-02T09:25:12 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [actiTIME123 - Login] but found [actiTIME - Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [actiTIME123 - Login] but found [actiTIME - Login]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TakeScreenshotDymically.TestScreenShots.verifyTitle4(TestScreenShots.java:75)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[test has been started]]>
            </line>
            <line>
              <![CDATA[Test Script got failed and screenshot is taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyTitle4 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="tearDown" is-config="true" duration-ms="642" started-at="2021-07-02T09:25:20 IST" finished-at="2021-07-02T09:25:20 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="SKIP" signature="verifyTitle3()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4]" name="verifyTitle3" duration-ms="0" started-at="2021-07-02T09:25:20 IST" depends-on-methods="TakeScreenshotDymically.TestScreenShots.verifyTitle2" finished-at="2021-07-02T09:25:20 IST">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestScreenShots.verifyTitle3()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestScreenShots.verifyTitle3()[pri:0, instance:TakeScreenshotDymically.TestScreenShots@2d8f65a4] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
            <line>
              <![CDATA[verifyTitle3 test is skipped]]>
            </line>
            <line>
              <![CDATA[Reports are generated]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyTitle3 -->
      </class> <!-- TakeScreenshotDymically.TestScreenShots -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
